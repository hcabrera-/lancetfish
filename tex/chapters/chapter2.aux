\relax 
\providecommand\hyper@newdestlabel[2]{}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Fundamentos}{15}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\newlabel{chap:fundamentos}{{2}{15}{Fundamentos}{chapter.2}{}}
\citation{chapter1:Perry:1989:ISO:66234.66236,chapter1:542273,chapter1:632878}
\citation{chapter1:INTEL:QUARK:DS}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Sistemas en-Chip}{16}{section.2.1}}
\newlabel{sec:sistemas_en_chip}{{2.1}{16}{Sistemas en-Chip}{section.2.1}{}}
\citation{chapter1:kempf:2011:multiprocessor}
\citation{chapter1:1218189}
\citation{chapter1:ADAPTEVA:HOME}
\@writefile{lof}{\contentsline {figure}{\numberline {2.1}{\ignorespaces  Diagrama a bloques de un dispositivo Quark\texttrademark SoC X1000. El diseño de procesadores para ordenadores de escritorio está fuertemente relacionado con la filosofía SoC, al grado que procesadores de gama alta pueden incluir dentro del mismo silicio módulos de aceleración para el procesamiento de gráficos. \relax }}{17}{figure.caption.7}}
\newlabel{fig:ch1_quark_soc}{{2.1}{17}{Diagrama a bloques de un dispositivo Quark\texttrademark SoC X1000. El diseño de procesadores para ordenadores de escritorio está fuertemente relacionado con la filosofía SoC, al grado que procesadores de gama alta pueden incluir dentro del mismo silicio módulos de aceleración para el procesamiento de gráficos. \relax }{figure.caption.7}{}}
\citation{chapter1:Tota:2009:CSN:1643330.1643337}
\citation{chapter1:Jalier:2010:HVH:1870926.1870971}
\@writefile{lof}{\contentsline {figure}{\numberline {2.2}{\ignorespaces  Diagrama a bloques de MPSoC Epiphany. Epiphany es un ejemplo de una arquitectura con núcleos de procesamiento homogéneo, algunas aplicaciones donde se a utilizado este dispositivo son: Radios definidos por software (\textit  {SDR}), visión por computadora, procesamiento de sonido y video, redes neuronales y simulaciones de sistemas físicos. \relax }}{19}{figure.caption.8}}
\newlabel{fig:ch1_epiphany_soc}{{2.2}{19}{Diagrama a bloques de MPSoC Epiphany. Epiphany es un ejemplo de una arquitectura con núcleos de procesamiento homogéneo, algunas aplicaciones donde se a utilizado este dispositivo son: Radios definidos por software (\textit {SDR}), visión por computadora, procesamiento de sonido y video, redes neuronales y simulaciones de sistemas físicos. \relax }{figure.caption.8}{}}
\citation{chapter1:100306}
\citation{chapter1:797400}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Redes de interconexión}{20}{section.2.2}}
\newlabel{sec:redes_de_interconexion}{{2.2}{20}{Redes de interconexión}{section.2.2}{}}
\citation{chapter1:Bjerregaard:2006:SRP:1132952.1132953}
\@writefile{lof}{\contentsline {figure}{\numberline {2.3}{\ignorespaces  a) Enlace de 6 nodos mediante líneas de comunicación dedicadas entre terminales. b) Enlace de 6 nodos mediante una red de interconexión en forma de anillo. \relax }}{22}{figure.caption.9}}
\newlabel{fig:ch1_enlaces_dedicados}{{2.3}{22}{a) Enlace de 6 nodos mediante líneas de comunicación dedicadas entre terminales. b) Enlace de 6 nodos mediante una red de interconexión en forma de anillo. \relax }{figure.caption.9}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Conceptos básicos de NoCs}{23}{section.2.3}}
\newlabel{sec:conceptos_basicos_de_nocs}{{2.3}{23}{Conceptos básicos de NoCs}{section.2.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.4}{\ignorespaces  Nodo de red: N representa un nodo de red, EP simboliza un elemento de procesamiento e IR a una interfaz de red. \textit  {Canal} es el término utilizado para referirse a las líneas físicas de transmisión de datos entre un nodo y uno de sus vecinos de la red.Los nodos miembros de una red pueden ser heterogéneos. No existe un modelo único de interfaz de red, ya que diferentes tipos de elementos de procesamiento requieren la presentación de los datos de trabajo en diferentes formatos. \relax }}{24}{figure.caption.10}}
\newlabel{fig:ch1_nodo_simple}{{2.4}{24}{Nodo de red: N representa un nodo de red, EP simboliza un elemento de procesamiento e IR a una interfaz de red. \textit {Canal} es el término utilizado para referirse a las líneas físicas de transmisión de datos entre un nodo y uno de sus vecinos de la red.Los nodos miembros de una red pueden ser heterogéneos. No existe un modelo único de interfaz de red, ya que diferentes tipos de elementos de procesamiento requieren la presentación de los datos de trabajo en diferentes formatos. \relax }{figure.caption.10}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.5}{\ignorespaces  a) Topología tipo torus de 9 nodos. b) Topología tipo anillo con 8 nodos. Cada línea de interconexión en el diagrama representa dos canales en direcciones opuestas, por ejemplo, la línea entre los nodos 1 y 2 de la red tipo anillo representa: un canal saliente del nodo 1 en dirección del nodo número 2 y un canal saliente del nodo número 2 con dirección del nodo 1. \relax }}{25}{figure.caption.11}}
\newlabel{fig:ch1_topologia}{{2.5}{25}{a) Topología tipo torus de 9 nodos. b) Topología tipo anillo con 8 nodos. Cada línea de interconexión en el diagrama representa dos canales en direcciones opuestas, por ejemplo, la línea entre los nodos 1 y 2 de la red tipo anillo representa: un canal saliente del nodo 1 en dirección del nodo número 2 y un canal saliente del nodo número 2 con dirección del nodo 1. \relax }{figure.caption.11}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.1}Topología}{25}{subsection.2.3.1}}
\citation{chapter1:Bahn09ageneric}
\citation{chapter1:Sadawarte:2011:CSS:1947940.1947992}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.2}Planificación de ruta}{28}{subsection.2.3.2}}
\citation{chapter1:Priyanka:2013:IJCA}
\citation{chapter1:5090764}
\@writefile{lof}{\contentsline {figure}{\numberline {2.6}{\ignorespaces  Tres instancias de una red con topología tipo malla o \textit  {mesh}. Las direcciones para cada nodo de red se forman de una dupla de coordenadas \textit  {\{x|y\}}. a) Rutas trazadas mediante algoritmos de ordenamiento dimensional. b) planificación de una ruta no mínima entre dos nodos de la red. c) Desbalance de carga en la red, el canal que vincula a los nodos \{1,1\} y \{0,1\}. \relax }}{29}{figure.caption.12}}
\newlabel{fig:ch1_ruteo}{{2.6}{29}{Tres instancias de una red con topología tipo malla o \textit {mesh}. Las direcciones para cada nodo de red se forman de una dupla de coordenadas \textit {\{x|y\}}. a) Rutas trazadas mediante algoritmos de ordenamiento dimensional. b) planificación de una ruta no mínima entre dos nodos de la red. c) Desbalance de carga en la red, el canal que vincula a los nodos \{1,1\} y \{0,1\}. \relax }{figure.caption.12}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.3}Estructura de mensajes}{30}{subsection.2.3.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.7}{\ignorespaces  Estructura de un mensaje. La división de un mensaje puede ser física o lógica, dependiendo del contexto de manejo en el cual se esté procesando la información. En la figura no se muestra la división de flits en phits. \relax }}{32}{figure.caption.13}}
\newlabel{fig:ch1_jerarquia_mensajes}{{2.7}{32}{Estructura de un mensaje. La división de un mensaje puede ser física o lógica, dependiendo del contexto de manejo en el cual se esté procesando la información. En la figura no se muestra la división de flits en phits. \relax }{figure.caption.13}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.4}Control de flujo}{32}{subsection.2.3.4}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.8}{\ignorespaces  Deadlock en una NoC. En este ejemplo El paquete A espera los recursos reservados por el paquete B, que a su vez espera los recursos asignados al paquete C, el cual, no puede avanzar por el bloqueo de recursos causado por el paquete D, el cual cierra la \textit  {dependencia circular} esperando los recursos del paquete A. \relax }}{34}{figure.caption.14}}
\newlabel{fig:ch1_deadlock}{{2.8}{34}{Deadlock en una NoC. En este ejemplo El paquete A espera los recursos reservados por el paquete B, que a su vez espera los recursos asignados al paquete C, el cual, no puede avanzar por el bloqueo de recursos causado por el paquete D, el cual cierra la \textit {dependencia circular} esperando los recursos del paquete A. \relax }{figure.caption.14}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.9}{\ignorespaces  Control de flujo bufferless. a) Dos paquetes llegan al router solicitando el puerto de salida superior. b) Bajo una estrategia de \textit  {descarte} el paquete A gana control de los recursos para avanzar mientras el paquete B es desechado. b) En una estrategia de \textit  {reenvío} el paquete B en lugar de ser descartado se le da salida a través del puerto disponible. \relax }}{35}{figure.caption.15}}
\newlabel{fig:ch1_bufferless}{{2.9}{35}{Control de flujo bufferless. a) Dos paquetes llegan al router solicitando el puerto de salida superior. b) Bajo una estrategia de \textit {descarte} el paquete A gana control de los recursos para avanzar mientras el paquete B es desechado. b) En una estrategia de \textit {reenvío} el paquete B en lugar de ser descartado se le da salida a través del puerto disponible. \relax }{figure.caption.15}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.10}{\ignorespaces  Secuencia de transmisión de datos mediante conmutación de circuitos. El identificador \textit  {C} representa la cabecera de un paquete, \textit  {E} representa un mensaje de confirmación de creación de enlace, \textit  {D} representa la carga efectiva de datos de un paquete y \textit  {T} representa el final de un paquete. \relax }}{36}{figure.caption.16}}
\newlabel{fig:ch1_circuit_switching}{{2.10}{36}{Secuencia de transmisión de datos mediante conmutación de circuitos. El identificador \textit {C} representa la cabecera de un paquete, \textit {E} representa un mensaje de confirmación de creación de enlace, \textit {D} representa la carga efectiva de datos de un paquete y \textit {T} representa el final de un paquete. \relax }{figure.caption.16}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {2.11}{\ignorespaces  Transferencias con controles de flujo basados en granularidad de paquete. a) Transferencia \textit  {store \& forward}, antes de ejecutar el próximo salto en la red, todo el paquete debe de estar almacenado en el router actual. b) Bajo el esquema \textit  {cut-through} no es necesario la espera de recepción de todos los flits de un paquete, tan pronto se cuente con espacio suficiente en el siguiente router se puede iniciar la transferencia de flits. c) En caso de no contar con espacio suficiente en el siguiente salto, los flits de un paquete se almacena en buffer sin riesgo de pérdidas, al momento de asegurar recursos en el siguiente router se reanuda la transferencia. \relax }}{38}{figure.caption.17}}
\newlabel{fig:ch1_store_cut}{{2.11}{38}{Transferencias con controles de flujo basados en granularidad de paquete. a) Transferencia \textit {store \& forward}, antes de ejecutar el próximo salto en la red, todo el paquete debe de estar almacenado en el router actual. b) Bajo el esquema \textit {cut-through} no es necesario la espera de recepción de todos los flits de un paquete, tan pronto se cuente con espacio suficiente en el siguiente router se puede iniciar la transferencia de flits. c) En caso de no contar con espacio suficiente en el siguiente salto, los flits de un paquete se almacena en buffer sin riesgo de pérdidas, al momento de asegurar recursos en el siguiente router se reanuda la transferencia. \relax }{figure.caption.17}{}}
\citation{chapter1:6663237,chapter1:Mello:2005:VCN:1081081.1081128}
\@writefile{lof}{\contentsline {figure}{\numberline {2.12}{\ignorespaces  Transferencia con control de flujo wormhole. Los flits que conforman el paquete presentan los siguientes identificadores: C (cabecera), D (datos o carga) y T (terminación). El concepto de transferencia es similar al control tipo cut-through, su única diferencia es la garantía de espacio en buffer requerido para continuar la transferencia de paquetes. El comportamiento de wormhole es exactamente igual al comportamiento de cut-through cuando este último tiene disponible el espacio de buffer en el siguiente nodo durante la llegada de un nuevo paquete. \relax }}{40}{figure.caption.18}}
\newlabel{fig:ch1_wormhole}{{2.12}{40}{Transferencia con control de flujo wormhole. Los flits que conforman el paquete presentan los siguientes identificadores: C (cabecera), D (datos o carga) y T (terminación). El concepto de transferencia es similar al control tipo cut-through, su única diferencia es la garantía de espacio en buffer requerido para continuar la transferencia de paquetes. El comportamiento de wormhole es exactamente igual al comportamiento de cut-through cuando este último tiene disponible el espacio de buffer en el siguiente nodo durante la llegada de un nuevo paquete. \relax }{figure.caption.18}{}}
\citation{chapter1:cota2011reliability}
\citation{chapter1:Duato:2002:INE:572400}
\citation{chapter1:Dally:2003:PPI:995703}
\citation{chapter1:Palesi:2013:RAN:2556370}
\@writefile{lof}{\contentsline {figure}{\numberline {2.13}{\ignorespaces  Uso de canales virtuales. Un router con canales virtuales utiliza múltiples buffers, denominados canales virtuales, para evitar la congestión de la red debido a la espera de liberación de recursos. \relax }}{41}{figure.caption.19}}
\newlabel{fig:ch1_vc}{{2.13}{41}{Uso de canales virtuales. Un router con canales virtuales utiliza múltiples buffers, denominados canales virtuales, para evitar la congestión de la red debido a la espera de liberación de recursos. \relax }{figure.caption.19}{}}
\citation{chapter1:192215}
\citation{chapter1:Flynn:1972:COE:1952456.1952459}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3.5}Fuentes de consulta}{42}{subsection.2.3.5}}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}Modelo SPMD}{42}{section.2.4}}
\newlabel{sec:modelo_spmd}{{2.4}{42}{Modelo SPMD}{section.2.4}{}}
\@setckpt{chapters/chapter2}{
\setcounter{page}{43}
\setcounter{equation}{0}
\setcounter{enumi}{4}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{2}
\setcounter{section}{4}
\setcounter{subsection}{0}
\setcounter{subsubsection}{0}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{13}
\setcounter{table}{0}
\setcounter{parentequation}{0}
\setcounter{AlgoLine}{0}
\setcounter{algocfline}{0}
\setcounter{algocfproc}{0}
\setcounter{algocf}{0}
\setcounter{lstnumber}{1}
\setcounter{Item}{4}
\setcounter{Hfootnote}{0}
\setcounter{Hy@AnnotLevel}{0}
\setcounter{bookmark@seq@number}{12}
\setcounter{DefaultLines}{2}
\setcounter{DefaultDepth}{0}
\setcounter{L@lines}{0}
\setcounter{L@depth}{0}
\setcounter{ContinuedFloat}{0}
\setcounter{subfigure}{0}
\setcounter{subtable}{0}
\setcounter{eu@}{0}
\setcounter{eu@i}{0}
\setcounter{mkern}{0}
\setcounter{lofdepth}{1}
\setcounter{lotdepth}{1}
\setcounter{@pps}{0}
\setcounter{@ppsavesec}{0}
\setcounter{@ppsaveapp}{0}
\setcounter{NAT@ctr}{0}
\setcounter{r@tfl@t}{0}
\setcounter{lstlisting}{0}
\setcounter{section@level}{0}
}
