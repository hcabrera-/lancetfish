\select@language {spanish}
\select@language {spanish}
\select@language {spanish}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {1.1}{\ignorespaces Secuencia simplificada de operación de un algoritmo \textit {block matching}. a) La unidad básica de información es un cuadro de una secuencia de video. b) Los cuadros se dividen en macro bloques de dimensiones constantes. c) El macro bloque se especifica solo con el pixel central y la distancia al límite del bloque. Los macro bloques con información relevante son almacenados para la búsqueda de coincidencias en cuadros posteriores. d) Se inicia la búsqueda del macro bloque en cuadros posteriores de la secuencia de video. La búsqueda se limita a un área especifica denominada región de interés. \relax }}{4}{figure.caption.4}
\contentsline {figure}{\numberline {1.2}{\ignorespaces Estructura general de una red neuronal convolucional. El número de capas de convolución/submuestreo determinan la complejidad de los patrones a discernir. El resultado del procesamiento llevado a cabo por la red es la clasificación del patron de entrada a una de las categorías definidas durante el entrenamiento de la red neuronal. \relax }}{5}{figure.caption.5}
\contentsline {figure}{\numberline {1.3}{\ignorespaces Detección de bordes en orientación vertical. a) muestra una imagen previa a la aplicación de un kernel de procesamiento. b) presenta el resultado de la aplicación del kernel $\left (\begin {smallmatrix}1 -1\end {smallmatrix}\right )$ \relax }}{6}{figure.caption.6}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {2.1}{\ignorespaces Diagrama a bloques de un dispositivo Quark\texttrademark SoC X1000. El diseño de procesadores para ordenadores de escritorio está fuertemente relacionado con la filosofía SoC, al grado que procesadores de gama alta pueden incluir dentro del mismo silicio módulos de aceleración para el procesamiento de gráficos. \relax }}{17}{figure.caption.7}
\contentsline {figure}{\numberline {2.2}{\ignorespaces Diagrama a bloques de MPSoC Epiphany. Epiphany es un ejemplo de una arquitectura con núcleos de procesamiento homogéneo, algunas aplicaciones donde se a utilizado este dispositivo son: Radios definidos por software (\textit {SDR}), visión por computadora, procesamiento de sonido y video, redes neuronales y simulaciones de sistemas físicos. \relax }}{19}{figure.caption.8}
\contentsline {figure}{\numberline {2.3}{\ignorespaces a) Enlace de 6 nodos mediante líneas de comunicación dedicadas entre terminales. b) Enlace de 6 nodos mediante una red de interconexión en forma de anillo. \relax }}{22}{figure.caption.9}
\contentsline {figure}{\numberline {2.4}{\ignorespaces Nodo de red: N representa un nodo de red, EP simboliza un elemento de procesamiento e IR a una interfaz de red. \textit {Canal} es el término utilizado para referirse a las líneas físicas de transmisión de datos entre un nodo y uno de sus vecinos de la red.Los nodos miembros de una red pueden ser heterogéneos. No existe un modelo único de interfaz de red, ya que diferentes tipos de elementos de procesamiento requieren la presentación de los datos de trabajo en diferentes formatos. \relax }}{24}{figure.caption.10}
\contentsline {figure}{\numberline {2.5}{\ignorespaces a) Topología tipo torus de 9 nodos. b) Topología tipo anillo con 8 nodos. Cada línea de interconexión en el diagrama representa dos canales en direcciones opuestas, por ejemplo, la línea entre los nodos 1 y 2 de la red tipo anillo representa: un canal saliente del nodo 1 en dirección del nodo número 2 y un canal saliente del nodo número 2 con dirección del nodo 1. \relax }}{25}{figure.caption.11}
\contentsline {figure}{\numberline {2.6}{\ignorespaces Tres instancias de una red con topología tipo malla o \textit {mesh}. Las direcciones para cada nodo de red se forman de una dupla de coordenadas \textit {\{x|y\}}. a) Rutas trazadas mediante algoritmos de ordenamiento dimensional. b) planificación de una ruta no mínima entre dos nodos de la red. c) Desbalance de carga en la red, el canal que vincula a los nodos \{1,1\} y \{0,1\}. \relax }}{29}{figure.caption.12}
\contentsline {figure}{\numberline {2.7}{\ignorespaces Estructura de un mensaje. La división de un mensaje puede ser física o lógica, dependiendo del contexto de manejo en el cual se esté procesando la información. En la figura no se muestra la división de flits en phits. \relax }}{32}{figure.caption.13}
\contentsline {figure}{\numberline {2.8}{\ignorespaces Deadlock en una NoC. En este ejemplo El paquete A espera los recursos reservados por el paquete B, que a su vez espera los recursos asignados al paquete C, el cual, no puede avanzar por el bloqueo de recursos causado por el paquete D, el cual cierra la \textit {dependencia circular} esperando los recursos del paquete A. \relax }}{34}{figure.caption.14}
\contentsline {figure}{\numberline {2.9}{\ignorespaces Control de flujo bufferless. a) Dos paquetes llegan al router solicitando el puerto de salida superior. b) Bajo una estrategia de \textit {descarte} el paquete A gana control de los recursos para avanzar mientras el paquete B es desechado. b) En una estrategia de \textit {reenvío} el paquete B en lugar de ser descartado se le da salida a través del puerto disponible. \relax }}{35}{figure.caption.15}
\contentsline {figure}{\numberline {2.10}{\ignorespaces Secuencia de transmisión de datos mediante conmutación de circuitos. El identificador \textit {C} representa la cabecera de un paquete, \textit {E} representa un mensaje de confirmación de creación de enlace, \textit {D} representa la carga efectiva de datos de un paquete y \textit {T} representa el final de un paquete. \relax }}{36}{figure.caption.16}
\contentsline {figure}{\numberline {2.11}{\ignorespaces Transferencias con controles de flujo basados en granularidad de paquete. a) Transferencia \textit {store \& forward}, antes de ejecutar el próximo salto en la red, todo el paquete debe de estar almacenado en el router actual. b) Bajo el esquema \textit {cut-through} no es necesario la espera de recepción de todos los flits de un paquete, tan pronto se cuente con espacio suficiente en el siguiente router se puede iniciar la transferencia de flits. c) En caso de no contar con espacio suficiente en el siguiente salto, los flits de un paquete se almacena en buffer sin riesgo de pérdidas, al momento de asegurar recursos en el siguiente router se reanuda la transferencia. \relax }}{38}{figure.caption.17}
\contentsline {figure}{\numberline {2.12}{\ignorespaces Transferencia con control de flujo wormhole. Los flits que conforman el paquete presentan los siguientes identificadores: C (cabecera), D (datos o carga) y T (terminación). El concepto de transferencia es similar al control tipo cut-through, su única diferencia es la garantía de espacio en buffer requerido para continuar la transferencia de paquetes. El comportamiento de wormhole es exactamente igual al comportamiento de cut-through cuando este último tiene disponible el espacio de buffer en el siguiente nodo durante la llegada de un nuevo paquete. \relax }}{40}{figure.caption.18}
\contentsline {figure}{\numberline {2.13}{\ignorespaces Uso de canales virtuales. Un router con canales virtuales utiliza múltiples buffers, denominados canales virtuales, para evitar la congestión de la red debido a la espera de liberación de recursos. \relax }}{41}{figure.caption.19}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {3.1}{\ignorespaces Diagrama abstracto de una red en-chip. \textit {PE} representa un Elemento de Procesamiento. La figura resalta los módulos de la red impactados por los parámetros descritos dentro de este capitulo. \relax }}{44}{figure.caption.20}
\contentsline {figure}{\numberline {3.2}{\ignorespaces Topología tipo malla. a) red con topología tipo malla, a cada nodo se le asigna una dirección compuesta de una tupla $(x,y)$. b) Número de saltos requeridos para comunicar los elementos de procesamiento más distantes de la red. c) Los nodos al centro de la red tienen el mayor \textit {grado} de conectividad. d) Ancho de banda en la bisección. \relax }}{46}{figure.caption.21}
\contentsline {figure}{\numberline {3.3}{\ignorespaces Línea de tiempo de proceso de transmisión de créditos. El nodo emisor (Nodo 1) resta un crédito con cada paquete que envía al nodo receptor. Cada crédito representa espacio de almacenamiento en los buffers del Nodo 2. El nodo receptor envía de vuelta un crédito con la salida de un paquetes de su medio de almacenamiento temporal. El escenario representado en esta figura supone nodos de red con espacio de almacenamiento suficiente para 1 solo paquete. \relax }}{52}{figure.caption.22}
\contentsline {figure}{\numberline {3.4}{\ignorespaces Giros previstos durante una transferencia a través de la red.a) giro desde $x$ en dirección a $y$. b) giro desde $y$ en dirección a $x$. c) Giro de 180°, donde la dimensión de tránsito permanece sin alteración, sin embargo, la dirección de desplazamiento es alterada desde $x+$ a $x-$. \relax }}{55}{figure.caption.23}
\contentsline {figure}{\numberline {3.5}{\ignorespaces Posibles relaciones cíclicas en redes con topologías tipo malla. Los apartados a) y b) muestran la forma más simple de un \textit {deadlock}. El apartado c) muestra una dependencia cíclica compleja, la cual está formada por 6 giros y tránsito en direcciones opuestas. d) Giros prohibidos por el algoritmo XY para prevenir la formación de dependencias cíclicas. \relax }}{56}{figure.caption.24}
\contentsline {figure}{\numberline {3.6}{\ignorespaces Rutas planificadas por medio del algoritmo west-first minimal. Las rutas creadas por medio de este algoritmo permite sortear bloqueos gracias a su capacidad de adaptabilidad. La ruta con inicio en la esquina inferior derecha muestra los cambios de adaptabilidad de la ruta conforme es reevaluada en cada nodo de la red. \relax }}{60}{figure.caption.25}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces Diagrama a bloques de red PNoC. La comunicación entre islas permite escalar el número de unidades funcionales del sistema. Además, el uso de múltiples isla permite la distribución de la demanda de recursos en diferentes áreas del sistema. \relax }}{62}{figure.caption.27}
\contentsline {figure}{\numberline {4.2}{\ignorespaces La estructura central de almacenamiento para los paquetes entrantes a un router CuNoC representa una disminución en los recursos necesarios para su implementación, sin embargo, crea un cuello de botella para el envío rápido de información hacia su siguiente salto en la red. \relax }}{63}{figure.caption.28}
\contentsline {figure}{\numberline {4.3}{\ignorespaces RMBoC Utiliza un híbrido entre un medio compartido y una conmutación de circuitos, para incrementar su rendimiento requiere de un aumento delineas de interconexión que pueden resultar costosas para sistemas en-chip. \relax }}{67}{figure.caption.29}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces Cada nodo de red es una isla de procesamiento en el acelerador. Las líneas de interconexión entre nodos se denominan canales. EP: Elemento de procesamiento, IR: Interfaz de red y NR: Nodo Rebotador. \relax }}{70}{figure.caption.31}
\contentsline {figure}{\numberline {5.2}{\ignorespaces No existe una restricción en el número de flits para el transporte de información dentro de un paquete, sin embargo, el incremento de estas unidades de transporte acarrea consigo una mayor congestión en la red además de un incremento en la cantidad de almacenamiento temporal requerido por cada uno de los puertos del encaminador. El flit de cabecera contiene la información necesaria para permitir que un paquete sea entregado a su destino. \relax }}{71}{figure.caption.32}
\contentsline {figure}{\numberline {5.3}{\ignorespaces Formato de flit de cabecera. El uso del campo \textit {origen} permite la implementación de algoritmos de encaminamiento basados en el modelo \textit {odd-even}. En caso de omitir el uso del campo origen durante el proceso de planificación de ruta, su espacio puede anexarse al campo \textit {usuario} para ampliar su longitud. \relax }}{72}{figure.caption.33}
\contentsline {figure}{\numberline {5.4}{\ignorespaces El protocolo de comunicación involucra un intercambio de señales (\textit {handshake}) de dos pasos. La transmisión inicia con la inversión de la señales del par diferencial (ciclo 2), el intercambio finaliza con la aserción de la señal rec\_crt la cual indica que el router destino tiene espacio disponible para la recepción de un paquete adicional. \relax }}{74}{figure.caption.34}
\contentsline {figure}{\numberline {5.5}{\ignorespaces Diagrama general de un segmento de los caminos de control y datos entre un puerto de salida y uno de entrada. Glosario: UMPE - Unidad de Manejo de Protocolo de Entrada. UCPE - Unidad de Control de Puerto de Entrada. UCC - Unidad de Control de Crossbar. UMPS - Unidad de Manejo de Protocolo de Salida. SCC - Segmento de Control de Crossbar. UGP - Unidad de Generación de Peticiones. PDE - Puerto de Entrada. PDS - Puerto de Salida. \relax }}{76}{figure.caption.36}
\contentsline {figure}{\numberline {5.6}{\ignorespaces El buffer dentro de un puerto de entrada funge como registro para el flit en transito durante el ciclo de reloj actual. \relax }}{79}{figure.caption.37}
\contentsline {figure}{\numberline {5.7}{\ignorespaces Forma de onda del intercambio de un paquete entre dos routers. Se requiere de 8 ciclos de reloj para que un crédito realice un viaje redondo entre los dos routers. \relax }}{80}{figure.caption.38}
\contentsline {figure}{\numberline {5.8}{\ignorespaces Todos los puertos de entrada del router son estructuras homogéneas, de manera que el IP es reutilizable y presenta el mismo comportamiento sin importar al canal que se encuentre asignado. \relax }}{81}{figure.caption.39}
\contentsline {figure}{\numberline {5.9}{\ignorespaces a) Maquina de estados finitos de entrada (MEFE). b) Maquina de estados finitos de salida (MEFS). \relax }}{83}{figure.caption.41}
\contentsline {figure}{\numberline {5.10}{\ignorespaces Cada unidad SCC genera el vector de control para cada uno de los segmentos del crossbar. Los segmentos están configurados para mantener sus lineas de salida en cero mientras no se encuentren paquetes en transito, la inclusión de una un valor constante no repercute en el numero de entradas al multiplexor, solo en la señales de control del mismo. \relax }}{84}{figure.caption.42}
\contentsline {figure}{\numberline {5.11}{\ignorespaces Las unidades SCC son responsables de mantener el control del numero de créditos disponibles en el router vecino inmediato, por lo cual reciben de manera directa la señal de recepción de créditos. El tiempo de proceso de un crédito es igual a un ciclo de reloj debido al cambio de estado de la maquina de estados finito que se encarga de administrar el proceso. La señal 'pet\_vec' representa el vector formado por todas las peticiones enviadas a la unidad SCC desde los puertos de entrada ligados a ella. \relax }}{85}{figure.caption.43}
\contentsline {figure}{\numberline {5.12}{\ignorespaces a) Implementación tradicional de arbitro con sistema de prioridad dinámica. b) Implementación de arbitro para dispositivos reconfigurables. La eliminación del ciclo combinacional en la cadena de acarreo del arbitro es necesario para su porte a dispositivos FPGA. \relax }}{87}{figure.caption.44}
\contentsline {figure}{\numberline {5.13}{\ignorespaces a) Maquina de estado finito de la unidad MEFCC. b) Maquina de estado finito para la unidad MEFMC. \relax }}{89}{figure.caption.45}
\contentsline {figure}{\numberline {5.14}{\ignorespaces Interfaz de red. a) la interfaz de red se conecta al encaminador como un vecino más de la red. b) Las unidades UCBDE y UCBDS son versiones modificadas de la unidad UCPE del puerto de entrada. \relax }}{90}{figure.caption.46}
\contentsline {figure}{\numberline {5.15}{\ignorespaces Las líneas de comunicación entre interfaz y elemento de procesamiento están definidas para acoplarse al formato utilizado por el elemento funcional. En este ejemplo se favorece una interfaz con de carga paralela de datos. \relax }}{93}{figure.caption.47}
\contentsline {figure}{\numberline {5.16}{\ignorespaces Las líneas de comunicación entre interfaz y elemento de procesamiento están definidas para acoplarse al formato utilizado por el elemento funcional. En este ejemplo se favorece una interfaz con carga de datos paralela. \relax }}{94}{figure.caption.48}
\contentsline {figure}{\numberline {5.17}{\ignorespaces Unidad UODS. \relax }}{95}{figure.caption.49}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces Características en aceleradores convencionales. a) El procesamiento de información se lleva a cabo en un nodo específico de la red. b) Cada paquete portando el resultado de un proceso se dirige a una puerta de salida preestablecida, compitiendo con los recursos de transporte con los paquetes de recién ingreso al sistema. c) El uso de políticas desbalanceadas para la asignación de cargas de trabajo de un nodo puede saturar rápidamente varios canales de comunicación en el acelerador. \relax }}{100}{figure.caption.50}
\contentsline {figure}{\numberline {6.2}{\ignorespaces Arquitectura propuesta. a) el acelerador está compuesto por una granja de núcleos comunicados por medio de una red en-chip, se hace uso de 3 tipos de nodo: Nodos terminales para la inyección y/o recepción de paquetes de la red, nodos frontera para re circular paquetes que no han sido procesados por una unidad funcional, y nodos centrales, los cuales procesan y envían los resultados fuera del acelerador. b) los nodos frontera solo tienen acceso a la red mediante un canal de comunicación. c) Los nodos terminal comparten micro-arquitectura con los nodos centrales, sin embargo, solo un nodo terminal es capaz de recibir y enviar paquetes fuera de la red. \relax }}{101}{figure.caption.51}
\contentsline {figure}{\numberline {6.3}{\ignorespaces Tránsito de un paquete a través del acelerador. a) en primera instancia un paquete ingresa a través de un nodo terminal. El paquete buscará la primera unidad funcional disponible para el procesamiento de información. b) en caso de alcanzar un nodo frontera sin haber procesado su información, el paquete cambia su dirección y continúa la búsqueda de una unidad funcional disponible. c) Una vez terminado el procesamiento de información de un paquete, este reingresa a la red en búsqueda de un nodo terminal para su egreso del sistema. \relax }}{103}{figure.caption.52}
\contentsline {figure}{\numberline {6.4}{\ignorespaces Arquitectura de nodo frontera. El camino de datos de este módulo solo lleva a cabo la sustitución de la dirección destino de los paquetes en tránsito. \relax }}{105}{figure.caption.53}
\contentsline {figure}{\numberline {6.5}{\ignorespaces a) Los nodos se etiquetan de acuerdo a su posición en la red. Vale la pena notar que todos los nodos centrales formarán una sub-red tipo malla al centro del acelerador. Las etiquetas para cada nodo sirven para reconocer que trabajo desempeña en el acelerador, además de facilitar la selección de instancia correcta durante el proceso de síntesis del sistema. b) Los nodos frontera deben de tomar en cuenta las restricciones impuestas por el algoritmo de encaminamiento para la selección de direcciones válidas en sus paquetes de salida. \relax }}{107}{figure.caption.54}
\contentsline {figure}{\numberline {6.6}{\ignorespaces a) Módulo planificador de ruta para puerto \textit {x-} del nodo [1,3]. b) Módulo planificador de ruta para puerto \textit {x-} del nodo [5,3], el nodo en cuestión maneja la salida de red a través del puerto \textit {x+}. \relax }}{110}{figure.caption.56}
\contentsline {figure}{\numberline {6.7}{\ignorespaces Segmento de calculo de ruta en el puerto de entrada \textit {x-} mediante el uso del algoritmo \textit {XY}. \relax }}{111}{figure.caption.58}
\contentsline {figure}{\numberline {6.8}{\ignorespaces El núcleo de la red integra todos los nodos necesarios para su funcionamiento, sin embargo no incluye un mecanismo para la inyección de paquetes. El arnés provee de los medios para evaluar el núcleo de la red, incluyendo medios para el envió y recepción de paquetes. \relax }}{114}{figure.caption.60}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {7.1}{\ignorespaces Histogramas de latencia de recepción de paquetes para puertos en dirección \textit {x-}. \relax }}{123}{figure.caption.67}
\contentsline {figure}{\numberline {7.2}{\ignorespaces Histogramas de latencia de recepción de paquetes para puertos en dirección \textit {x+}. \relax }}{124}{figure.caption.68}
